/*
Test.assertSimilar(
    isVow([118,117,120,121,117,98,122,97,120,106,104,116,113,114,113,120,106]),[118,"u",120,121,"u",98,122,"a",120,106,104,116,113,114,113,120,106]
    );

 Test.assertSimilar(
     isVow([101,121,110,113,113,103,121,121,101,107,103]),["e",121,110,113,113,103,121,121,"e",107,103]
     );
*/


function organizador(a,b){
    return (a-b)
  }

let array = [118,117,120,121,117,98,122,97,120,106,104,116,113,114,113,120,106,118,"u",120,121,"u",98,122,"a",120,106,104,116,113,114,113,120,106,101,121,110,113,113,103,121,121,101,107,103,"e",121,110,113,113,103,121,121,"e",107,103]

let n1 = ["Z","X","D","E","R","V","A","J","T"]
let n2 = array.map(String.fromCharCode.apply(this, array))



var unCharCode = function(x) {
    return this["eval"]("String['fromCharCode'](" + x + ")");
  };

  unCharCode[118,117,120,121,117,98,122,97,120,106,104,116,113,114,113,120,106,118,"u",120,121,"u",98,122,"a",120,106,104,116,113,114,113,120,106,101,121,110,113,113,103,121,121,101,107,103,"e",121,110,113,113,103,121,121,"e",107,103]

console.log(unCharCode)



/*console.log(array.sort(organizador))
console.log(array)*/

